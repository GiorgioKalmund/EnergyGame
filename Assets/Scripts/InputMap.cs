//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/InputMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMap: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMap"",
    ""maps"": [
        {
            ""name"": ""main"",
            ""id"": ""8012d6e0-f752-4d6f-aad7-ad9e5620e610"",
            ""actions"": [
                {
                    ""name"": ""Pause Screen"",
                    ""type"": ""Button"",
                    ""id"": ""b4c8bcb9-b41a-4eba-b4d0-f0284a33cf10"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Show Power"",
                    ""type"": ""Button"",
                    ""id"": ""086e6f80-ffd8-4ea3-8a2b-c5d7639fd4fe"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Show CO2"",
                    ""type"": ""Button"",
                    ""id"": ""9942781f-48f0-4c79-98d8-441c374f1ff1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Collapse All Tags"",
                    ""type"": ""Button"",
                    ""id"": ""f4d18a0a-d101-45ab-a36e-e42cb0465889"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5b1d9cd4-946a-4586-9add-15f27f679fe5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Show Finance"",
                    ""type"": ""Button"",
                    ""id"": ""023c30ed-e745-4349-8275-744753b2056d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Toggle Dropdown"",
                    ""type"": ""Button"",
                    ""id"": ""ed4d697c-3f45-4af8-a1ac-b413a80a34be"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4821699a-1077-4f17-9e9a-7cfca2ef8f25"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause Screen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""679c994f-5061-4281-9e1d-7bdacadb8880"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Show Power"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8683b2a5-d539-49ab-b635-93fec59e6a33"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Show CO2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2cb02f2f-b61e-4cc0-bb98-35bebbcf7fc5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e8f9ebd9-58be-417d-bc3c-10510bfe899f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3457c96b-43c5-4cda-b6e0-b05e64446855"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b1a89b6e-17f0-44b1-866a-1546e7d5e53a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""35a972d7-cee6-461e-b7a5-2fa1495bfe4c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3b63c8e8-5710-4f37-bccf-55edec98d40d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a1b72c6-83fe-4177-b713-686cccd1ae12"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Collapse All Tags"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6834ab2-58b8-4ee6-b14a-25dc20a55d7a"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Show Finance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8234201-63a9-48d6-9fd7-63cffc409200"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toggle Dropdown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Mouse"",
            ""id"": ""a723c69c-5b01-4495-8ae9-ba83b885c43b"",
            ""actions"": [
                {
                    ""name"": ""Delta"",
                    ""type"": ""Value"",
                    ""id"": ""03a429a1-cf31-4a88-8d1a-c2e8dc36a296"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""4ae2f745-52e2-4651-bc96-06fbc3b04ae4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""53792135-c3f5-4c67-8606-6188a716c84c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""Button"",
                    ""id"": ""79d55fb5-dae7-479d-a575-853087e572e2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c46f6c00-ca56-4f18-a580-fcf24e21d5ea"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32db3b9f-a94e-4db3-89f3-ef0981935391"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fb09477-606a-4bde-8c9c-98fa37831414"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d652deb8-0a95-4f1e-9312-51bb30bed895"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // main
        m_main = asset.FindActionMap("main", throwIfNotFound: true);
        m_main_PauseScreen = m_main.FindAction("Pause Screen", throwIfNotFound: true);
        m_main_ShowPower = m_main.FindAction("Show Power", throwIfNotFound: true);
        m_main_ShowCO2 = m_main.FindAction("Show CO2", throwIfNotFound: true);
        m_main_CollapseAllTags = m_main.FindAction("Collapse All Tags", throwIfNotFound: true);
        m_main_Move = m_main.FindAction("Move", throwIfNotFound: true);
        m_main_ShowFinance = m_main.FindAction("Show Finance", throwIfNotFound: true);
        m_main_ToggleDropdown = m_main.FindAction("Toggle Dropdown", throwIfNotFound: true);
        // Mouse
        m_Mouse = asset.FindActionMap("Mouse", throwIfNotFound: true);
        m_Mouse_Delta = m_Mouse.FindAction("Delta", throwIfNotFound: true);
        m_Mouse_LeftClick = m_Mouse.FindAction("LeftClick", throwIfNotFound: true);
        m_Mouse_RightClick = m_Mouse.FindAction("RightClick", throwIfNotFound: true);
        m_Mouse_MiddleClick = m_Mouse.FindAction("MiddleClick", throwIfNotFound: true);
    }

    ~@InputMap()
    {
        UnityEngine.Debug.Assert(!m_main.enabled, "This will cause a leak and performance issues, InputMap.main.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Mouse.enabled, "This will cause a leak and performance issues, InputMap.Mouse.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // main
    private readonly InputActionMap m_main;
    private List<IMainActions> m_MainActionsCallbackInterfaces = new List<IMainActions>();
    private readonly InputAction m_main_PauseScreen;
    private readonly InputAction m_main_ShowPower;
    private readonly InputAction m_main_ShowCO2;
    private readonly InputAction m_main_CollapseAllTags;
    private readonly InputAction m_main_Move;
    private readonly InputAction m_main_ShowFinance;
    private readonly InputAction m_main_ToggleDropdown;
    public struct MainActions
    {
        private @InputMap m_Wrapper;
        public MainActions(@InputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @PauseScreen => m_Wrapper.m_main_PauseScreen;
        public InputAction @ShowPower => m_Wrapper.m_main_ShowPower;
        public InputAction @ShowCO2 => m_Wrapper.m_main_ShowCO2;
        public InputAction @CollapseAllTags => m_Wrapper.m_main_CollapseAllTags;
        public InputAction @Move => m_Wrapper.m_main_Move;
        public InputAction @ShowFinance => m_Wrapper.m_main_ShowFinance;
        public InputAction @ToggleDropdown => m_Wrapper.m_main_ToggleDropdown;
        public InputActionMap Get() { return m_Wrapper.m_main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void AddCallbacks(IMainActions instance)
        {
            if (instance == null || m_Wrapper.m_MainActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainActionsCallbackInterfaces.Add(instance);
            @PauseScreen.started += instance.OnPauseScreen;
            @PauseScreen.performed += instance.OnPauseScreen;
            @PauseScreen.canceled += instance.OnPauseScreen;
            @ShowPower.started += instance.OnShowPower;
            @ShowPower.performed += instance.OnShowPower;
            @ShowPower.canceled += instance.OnShowPower;
            @ShowCO2.started += instance.OnShowCO2;
            @ShowCO2.performed += instance.OnShowCO2;
            @ShowCO2.canceled += instance.OnShowCO2;
            @CollapseAllTags.started += instance.OnCollapseAllTags;
            @CollapseAllTags.performed += instance.OnCollapseAllTags;
            @CollapseAllTags.canceled += instance.OnCollapseAllTags;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @ShowFinance.started += instance.OnShowFinance;
            @ShowFinance.performed += instance.OnShowFinance;
            @ShowFinance.canceled += instance.OnShowFinance;
            @ToggleDropdown.started += instance.OnToggleDropdown;
            @ToggleDropdown.performed += instance.OnToggleDropdown;
            @ToggleDropdown.canceled += instance.OnToggleDropdown;
        }

        private void UnregisterCallbacks(IMainActions instance)
        {
            @PauseScreen.started -= instance.OnPauseScreen;
            @PauseScreen.performed -= instance.OnPauseScreen;
            @PauseScreen.canceled -= instance.OnPauseScreen;
            @ShowPower.started -= instance.OnShowPower;
            @ShowPower.performed -= instance.OnShowPower;
            @ShowPower.canceled -= instance.OnShowPower;
            @ShowCO2.started -= instance.OnShowCO2;
            @ShowCO2.performed -= instance.OnShowCO2;
            @ShowCO2.canceled -= instance.OnShowCO2;
            @CollapseAllTags.started -= instance.OnCollapseAllTags;
            @CollapseAllTags.performed -= instance.OnCollapseAllTags;
            @CollapseAllTags.canceled -= instance.OnCollapseAllTags;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @ShowFinance.started -= instance.OnShowFinance;
            @ShowFinance.performed -= instance.OnShowFinance;
            @ShowFinance.canceled -= instance.OnShowFinance;
            @ToggleDropdown.started -= instance.OnToggleDropdown;
            @ToggleDropdown.performed -= instance.OnToggleDropdown;
            @ToggleDropdown.canceled -= instance.OnToggleDropdown;
        }

        public void RemoveCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainActions instance)
        {
            foreach (var item in m_Wrapper.m_MainActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainActions @main => new MainActions(this);

    // Mouse
    private readonly InputActionMap m_Mouse;
    private List<IMouseActions> m_MouseActionsCallbackInterfaces = new List<IMouseActions>();
    private readonly InputAction m_Mouse_Delta;
    private readonly InputAction m_Mouse_LeftClick;
    private readonly InputAction m_Mouse_RightClick;
    private readonly InputAction m_Mouse_MiddleClick;
    public struct MouseActions
    {
        private @InputMap m_Wrapper;
        public MouseActions(@InputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Delta => m_Wrapper.m_Mouse_Delta;
        public InputAction @LeftClick => m_Wrapper.m_Mouse_LeftClick;
        public InputAction @RightClick => m_Wrapper.m_Mouse_RightClick;
        public InputAction @MiddleClick => m_Wrapper.m_Mouse_MiddleClick;
        public InputActionMap Get() { return m_Wrapper.m_Mouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MouseActions set) { return set.Get(); }
        public void AddCallbacks(IMouseActions instance)
        {
            if (instance == null || m_Wrapper.m_MouseActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MouseActionsCallbackInterfaces.Add(instance);
            @Delta.started += instance.OnDelta;
            @Delta.performed += instance.OnDelta;
            @Delta.canceled += instance.OnDelta;
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
        }

        private void UnregisterCallbacks(IMouseActions instance)
        {
            @Delta.started -= instance.OnDelta;
            @Delta.performed -= instance.OnDelta;
            @Delta.canceled -= instance.OnDelta;
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
        }

        public void RemoveCallbacks(IMouseActions instance)
        {
            if (m_Wrapper.m_MouseActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMouseActions instance)
        {
            foreach (var item in m_Wrapper.m_MouseActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MouseActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MouseActions @Mouse => new MouseActions(this);
    public interface IMainActions
    {
        void OnPauseScreen(InputAction.CallbackContext context);
        void OnShowPower(InputAction.CallbackContext context);
        void OnShowCO2(InputAction.CallbackContext context);
        void OnCollapseAllTags(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnShowFinance(InputAction.CallbackContext context);
        void OnToggleDropdown(InputAction.CallbackContext context);
    }
    public interface IMouseActions
    {
        void OnDelta(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
    }
}
